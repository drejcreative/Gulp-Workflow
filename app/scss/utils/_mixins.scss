/////////////////////////////////////
// Automaticly changing retina background
/////////////////////////////////////
@mixin background-image-retina($file, $type) {
  background-image: url($file + '.' + $type);

  @media (-webkit-min-device-pixel-ratio: 2), (min--moz-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 2/1), (min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx) {
    & {
      background-image: url($file + '@2x.' + $type);
    }
  }
}

//usage
/*
#foo {
  @include background-image-retina('foobar', 'png');
  background: repeat;
}
*/

/////////////////////////////////////
// Clearfix
/////////////////////////////////////
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
//@include clearfix;

/////////////////////////////////////
// Responsive Table Mixin
/////////////////////////////////////
@mixin rwd-first {
	display: block;
  tbody {
    border: none;
  }
		tbody, th, td, tr, tfoot {
			display: block;
		}
		thead {
			display: none;
		}
		tr {
      float: left;
      width: 100%;
      margin: 0 0 1em;
      border: 1px solid $light-color;
			box-shadow: 0px 2px 5px 0px $light-color;
			border-radius: 3px;
			border-top: 5px solid $light-color;

			td {
				padding: .5em .5em .5em 50%;
				float:left;
       	width: 100%;
				&:before {
					width: 100%;
					display: block;
					float: left;
					padding: .5em .5em .5em 0;
					clear: both;
					margin: -.5em 0 0 -100%;
					font-size: 1.125em;

				}
			}
		}
		tr:nth-of-type(even) {
			//background: $gray-color;
			td {
				&:before {
				}
			}
		}
}

@mixin rwd-second {
	display: table;
	border: none;
  tbody {
    border-bottom: 3px solid $light-color;
  }
	th, td {
		display: table-cell;
	}
	tr {
		display: table-row;
		border: none;
		border-bottom: 1px solid $light-color;
    float: none;
    margin: 0;
		box-shadow: none;
		td {
			padding: .75em 0 0.75em .25em;
      float: none;
      width: auto;
			&:before {
				padding: 0 !important;
			}
		}
	}
	thead {
		display: table-header-group;
	}
	tbody,tfoot {
		display: table-row-group;
	}
	tr:nth-of-type(even) {
		background:none;
		td {
			&:before {
			}
		}
	}
}

%responive-tables {
	@include rwd-first;
	@media screen and (min-width: 960px) {
		@include rwd-second;
	}
}

@mixin responive-tables($headings...) {
	$list: $headings;
	@each $list-headings in $list {
		$i: index($list, $list-headings);
		tbody tr td:nth-of-type(#{$i}):before {
			content: $list-headings;
		}
		@media screen and (min-width: 960px) {
			tbody tr td:nth-of-type(#{$i}):before {
				content: '';
			}
		}
	}
}
